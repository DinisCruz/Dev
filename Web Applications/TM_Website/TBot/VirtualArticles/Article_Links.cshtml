@using System
@using System.Collections.Generic
@using TeamMentor.CoreLib;
@using O2.DotNetWrappers.ExtensionMethods;

@{
    var tmDatabase = TM_Xml_Database.Current;
    var articles = tmDatabase.Cached_GuidanceItems;
    var articlePaths = tmDatabase.GuidanceItems_FileMappings;
    var index = 1;
    var libraryPath = tmDatabase.Path_XmlLibraries;
    var guidToFind = "577e90c9-8e44-4240-b00f-768316d63901".guid();
    //var guidToFind = "97b5eafb-970d-4436-ae7f-3141f057e410";
    var tmArticle = tmDatabase.tmGuidanceItem(guidToFind);

    //var articleContent = tmArticle.Content.Data_Json;

    var guidRexEx = @"([a-z0-9]{8}[-][a-z0-9]{4}[-][a-z0-9]{4}[-][a-z0-9]{4}[-][a-z0-9]{12})";
    //var GUIDs = articleContent.matches(guidRexEx).select((match)=> match.Value);

    Func<String, List<string>> contentGuids =
        (articleContent) =>
            {
                var guids = articleContent.matches(guidRexEx).select((match)=> match.Value);
                return guids;
                /*var guidsText = "<ul>";
                foreach (var guid in guids)
                    guidsText+= "<li><a href={0}>{0}</a></li>".format(guid);
                guidsText += "</ul>";
                return guidsText;*/
            };
}

<h4>Article Links</h4>
<table class="table table-striped table-condensed">
    <tr>
        <th>#</th>            
        <th>Title (Guid)</th>                   
        <th>Technology</th>   
        <th>Phase</th>   
        <th>Type</th>   
        <th>Categoty</th>   
        <th>External Links</th>         
    </tr>
    @foreach (var article in articles)
    {
        <tr>
            <td>@(index++)</td>
                    <td><a href="/article/@article.Key" target="_blank">@article.Value.Metadata.Title</a></td>                    
                    <td>@article.Value.Metadata.Technology</td>
                    <td>@article.Value.Metadata.Phase</td>
                    <td>@article.Value.Metadata.Type</td>
            <td>@article.Value.Metadata.Category</td>
            <td><ul>
                    @foreach(var guid in contentGuids(article.Value.Content.Data_Json))
                    {
                        <li><a href="/article/@guid"  target="_blank">@guid</a></li>
                    }
                </ul>
            </td>
        </tr>
    }
</table>

